@use 'lib/root.scss' as *;

:root {
  accent-color: var(--accent);
  color-scheme: light dark;

  @for $i from 0 through 10 {
    --grey#{($i) * 10}: oklch(#{$i * 10%} 0 0);
  }

  --root-color: white; // Don't change, it's used to mix colors on light/dark schemes
  --rad_sm: 5px;
  --rad_lg: 10px;
  --inspector-size: 32em;
  --tabs-height: 24pt;
  --bg-gradient: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.2),
    transparent 100%
  );

  --text: #020303;
  --text-dim: #999;
  --bg-root: #fff;
  --bg0: #f1f4f4;
  --bg1: #bbb;
  --bg2: #ddd;

  --tabs-bg: #7e7e7d;
  --tabs-text: #fff;
  --tabs-border: rgba(203, 203, 203, 0.796);

  --accent: #da6200;
  --text-on-accent: #fff;

  // Shadow colors depend on the background color
  --bg0-shadow-color: color-mix(in oklch, var(--bg0) 90%, black);

  // Named stroke colors (for borders and lines that should contrast well with background colors)
  --stroke-L: 70%;
  --stroke-C: 100%;
  --stroke-red: oklch(var(--stroke-L) var(--stroke-C) 20);
  --stroke-orange: oklch(var(--stroke-L) var(--stroke-C) 75);
  --stroke-yellow: oklch(var(--stroke-L) var(--stroke-C) 110);
  --stroke-green: oklch(var(--stroke-L) var(--stroke-C) 150);
  --stroke-blue: oklch(var(--stroke-L) var(--stroke-C) 220);
  --stroke-indigo: oklch(var(--stroke-L) var(--stroke-C) 250);
  --stroke-violet: oklch(var(--stroke-L) var(--stroke-C) 280);

  // Named background colors (should contrast well with text color)
  --bg-L: 80%; // Background lightness
  --bg-C: 70%; // Background chroma
  --bg-dark-L: 40%; // Dark bg lightness
  --bg-dark-C: 50%; // Dark bg chroma

  --bg-red: oklch(var(--bg-L) var(--bg-C) 20);
  --bg-orange: oklch(var(--bg-L) var(--bg-C) 75);
  --bg-yellow: oklch(var(--bg-L) var(--bg-C) 110);
  --bg-green: oklch(var(--bg-L) var(--bg-C) 150);
  --bg-blue: oklch(var(--bg-L) var(--bg-C) 220);
  --bg-indigo: oklch(var(--bg-L) var(--bg-C) 250);
  --bg-violet: oklch(var(--bg-L) var(--bg-C) 280);

  --bg-dark-red: oklch(var(--bg-dark-L) var(--bg-dark-C) 20);
  --bg-dark-orange: oklch(var(--bg-dark-L) var(--bg-dark-C) 75);
  --bg-dark-yellow: oklch(var(--bg-dark-L) var(--bg-dark-C) 110);
  --bg-dark-green: oklch(var(--bg-dark-L) var(--bg-dark-C) 150);
  --bg-dark-blue: oklch(var(--bg-dark-L) var(--bg-dark-C) 220);
  --bg-dark-indigo: oklch(var(--bg-dark-L) var(--bg-dark-C) 250);
  --bg-dark-violet: oklch(var(--bg-dark-L) var(--bg-dark-C) 280);

  --transition-duration: 0.5s;
}

@media (prefers-color-scheme: dark) {
  :root {
    @for $i from 0 through 10 {
      --grey#{(10-$i) * 10}: oklch(#{$i * 10%} 0 0);
    }

    --root-color: black; // Don't change, it's used to mix colors on light/dark schemes
    --text: #f3f3f3;
    --text-dim: #766;
    --bg-root: #111;
    --bg0: #262222;
    --bg1: #696666;
    --bg2: #333;

    --stroke-L: 80%;
    --bg-L: 50%;
    --bg-C: 50%;
    --bg-dark-L: 30%;
  }
}

html {
  background: var(--bg-root);
  font-size: 10pt;
  font-family:
    system-ui,
    Segoe UI,
    Helvetica,
    Arial,
    sans-serif,
    Apple Color Emoji,
    Segoe UI Emoji;
}

body {
  margin: 0;
}

#app {
  display: flex;
  width: 100vw;
  height: 100svh;
}

@include tight-screen {
  html,
  body,
  #app {
    height: auto;
    min-height: 100svh;
  }
  #app {
    flex-direction: column;
    --inspector-size: auto;
  }
}

p {
  line-height: 1.5em;
}

h2 {
  border-radius: var(--rad_sm);
  font-size: 14pt;
}

hr {
  margin-block: 1.2em;
  border: none;
  border-top: solid 1px var(--bg1);
}

kbd {
  border: 1px solid currentcolor;
  border-radius: 0.3em;
  padding: 0.2em 0.3em;
  color: color-mix(in srgb, currentcolor 30%, transparent);
  line-height: 1;
  white-space: nowrap;
}

footer {
  color: var(--text-dim);
  text-align: center;
}

.link {
  color: var(--accent);
  text-decoration: underline;
}
